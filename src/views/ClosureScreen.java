/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dataclasses.ContractDto;
import dataclasses.CustomerDto;
import dataclasses.MaterialDto;
import dataclasses.QuotationDetailsDto;
import dataclasses.QuotationMasterDto;
import dataclasses.RegistrationDto;
import dataclasses.ReportContentDto;
import java.awt.Desktop;
import java.awt.GridLayout;
import java.io.File;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import navigationCofiguration.NavigationConstants;
import navigationCofiguration.NavigationController;
import services.impl.ContractServiceImpl;
import services.impl.CustomerServiceImpl;
import services.impl.LaborServiceImpl;
import services.impl.QuotationServiceImpl;
import services.impl.RegistrationServiceImpl;
import services.interfaces.CustomerService;
import services.interfaces.QuotationService;
import utils.Arguments;
import utils.DialogHelper;
import utils.Helper;
import utils.ReportGenerator;

/**
 *
 * @author shinu.k
 */
public class ClosureScreen extends javax.swing.JFrame {

    /**
     * Creates new form LaborScreen
     */
    public ClosureScreen() {
        initComponents();
    }

    public ClosureScreen(Arguments args) {
        this();

        if (args.get("contract") != null) {
            contractDto = (ContractDto) args.get("contract");
        }

        btnPrint.setEnabled(false);
        
        populateSelectedDetails(contractDto);
        setMaterials(contractDto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jPLaborDeails = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNoEmployees = new javax.swing.JTextField();
        txtTotalDays = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtReferenceNo = new javax.swing.JTextField();
        txtTotalAmount = new javax.swing.JTextField();
        txtAgrementReference = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtAddress2 = new javax.swing.JTextField();
        txtAddress1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPCustomerList = new javax.swing.JScrollPane();
        txtMaterialCode = new javax.swing.JTextField();
        txtMaterialRate = new javax.swing.JFormattedTextField();
        txtMaterialQty = new javax.swing.JFormattedTextField();
        txtMaterialAmount = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnAddMaterial = new javax.swing.JButton();
        btnRemoveMaterial = new javax.swing.JButton();
        btnSaveMaterial = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("appResources/Strings"); // NOI18N
        setTitle(bundle.getString("Customer_Screen")); // NOI18N
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/closure.png"))); // NOI18N
        btnOk.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnOk.setFocusPainted(false);
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/home.png"))); // NOI18N
        btnHome.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHome.setFocusPainted(false);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/print.png"))); // NOI18N
        btnPrint.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnPrint.setFocusPainted(false);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPLaborDeails.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtName.setColumns(20);
        txtName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtName.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Reference No");
        jLabel3.setToolTipText("");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Agrement Reference");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Address 1");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Total amount");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Total days");

        txtNoEmployees.setEnabled(false);

        txtTotalDays.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Name");

        txtReferenceNo.setEnabled(false);

        txtTotalAmount.setEnabled(false);

        txtAgrementReference.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("No of employees");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Address 2");

        txtAddress2.setEnabled(false);
        txtAddress2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddress2ActionPerformed(evt);
            }
        });

        txtAddress1.setEnabled(false);

        javax.swing.GroupLayout jPLaborDeailsLayout = new javax.swing.GroupLayout(jPLaborDeails);
        jPLaborDeails.setLayout(jPLaborDeailsLayout);
        jPLaborDeailsLayout.setHorizontalGroup(
            jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                        .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(47, 47, 47)
                                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtNoEmployees, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtAgrementReference, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtReferenceNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtTotalDays, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtAddress1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                                        .addComponent(txtAddress2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)))))
                        .addContainerGap(78, Short.MAX_VALUE))))
        );
        jPLaborDeailsLayout.setVerticalGroup(
            jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtReferenceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtAgrementReference, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtNoEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalDays, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(107, 107, 107))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPCustomerList.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtMaterialCode.setEnabled(false);

        txtMaterialRate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        txtMaterialQty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        txtMaterialAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("Amount");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("Quantity");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("Unit rate");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setText("Material");

        btnAddMaterial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/add_material.png"))); // NOI18N
        btnAddMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMaterialActionPerformed(evt);
            }
        });

        btnRemoveMaterial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/remove_material.png"))); // NOI18N
        btnRemoveMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMaterialActionPerformed(evt);
            }
        });

        btnSaveMaterial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/save_material.png"))); // NOI18N
        btnSaveMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveMaterialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(txtMaterialCode, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaterialRate, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaterialQty, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtMaterialAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(btnSaveMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPCustomerList, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaterialCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtMaterialRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(37, 37, 37))
                    .addComponent(btnRemoveMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaterialAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaterialQty, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSaveMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPCustomerList, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPLaborDeails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPLaborDeails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        boolean result = new ContractServiceImpl().closeContract(contractDto.getId(), contractDto.getEndDate());

        if (result) {
            QuotationMasterDto masterDto = new QuotationMasterDto();
            masterDto.setId(quotationId);
            masterDto.setDetailsDtos(contrctMaterials);

            result = quotationService.updateMaterials(masterDto);
        }

        if (result) {
            DialogHelper.showInfoMessage(Helper.getPropertyValue("Success"),
                    Helper.getPropertyValue("SuccessMessage"));
        }
        
        btnPrint.setEnabled(result);
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        NavigationController.navigateToScreen(NavigationConstants.DASHBOARD, this);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        try {
            RegistrationDto regDto = new RegistrationServiceImpl().getRegistrationDetails();

            String output = ReportGenerator.generateClosureReport(regDto, contractDto, customer);

            if (output == null) {
                DialogHelper.showErrorMessage(Helper.getPropertyValue("Error"), Helper.getPropertyValue("Error_Quotation_Print_Message"));
            } else {
                Desktop.getDesktop().open(new File(output));
            }
        } catch (Exception ex) {
            Logger.getLogger(QuotationScreen.class.getName()).log(Level.SEVERE, null, ex);
            DialogHelper.showErrorMessage(Helper.getPropertyValue("Error"), Helper.getPropertyValue("Error_Quotation_Print_Message"));
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void txtAddress2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddress2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddress2ActionPerformed

    private void btnAddMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMaterialActionPerformed
        addMaterial();
    }//GEN-LAST:event_btnAddMaterialActionPerformed

    private void btnRemoveMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMaterialActionPerformed
        if (selectedMaterial >= 0) {
            clearMaterials();
            dtModel.removeRow(selectedMaterial);
            contrctMaterials.remove(selectedMaterial);
        }
    }//GEN-LAST:event_btnRemoveMaterialActionPerformed

    private void btnSaveMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveMaterialActionPerformed
        if (txtMaterialRate.getText().trim().length() > 0) {
            QuotationDetailsDto detailsDto = contrctMaterials.get(selectedMaterial);
            try {
                detailsDto.setAmount(Double.parseDouble(txtMaterialAmount.getText().toString().trim()));
            } catch (Exception e) {
                detailsDto.setAmount(0);
            }
            try {
                detailsDto.setQuantity(Integer.parseInt(txtMaterialQty.getText().toString().trim()));
            } catch (Exception e) {
                detailsDto.setQuantity(0);
            }
            try {
                detailsDto.setUnitRate(Integer.parseInt(txtMaterialRate.getText().toString().trim()));
            } catch (Exception e) {
                detailsDto.setUnitRate(0);
            }

            dtModel.removeRow(selectedMaterial);
            dtModel.insertRow(selectedMaterial, new Object[]{detailsDto.getMaterialName(), detailsDto.getUnitRate(), detailsDto.getQuantity(), detailsDto.getAmount()});
        } else {
            DialogHelper.showInfoMessage("Materials", Helper.getPropertyValue("EmptyFields"));
        }
    }//GEN-LAST:event_btnSaveMaterialActionPerformed

    private void addMaterial() {
        JPanel jPanel = new JPanel(new GridLayout(4, 2));

        jPanel.add(new JLabel("Material*"));
        JTextField materialField = new JTextField();
        jPanel.add(materialField);

        jPanel.add(new JLabel("Unit rate*"));
        JTextField unitRateField = new JTextField();
        jPanel.add(unitRateField);

        jPanel.add(new JLabel("Quantity*"));
        JTextField quantityField = new JTextField();
        jPanel.add(quantityField);

        jPanel.add(new JLabel("Amount*"));
        JTextField amountField = new JTextField();
        jPanel.add(amountField);

        int result = DialogHelper.showQuestionDialog(this, "Add Material", jPanel, JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {

            String materialCode = materialField.getText().trim();

            if (materialCode.length() > 0 && unitRateField.getText().trim().length() > 0 && quantityField.getText().trim().length() > 0 && amountField.getText().trim().length() > 0) {
                if (materials.containsKey(materialCode)) {
                    MaterialDto materialDto = materials.get(materialCode);

                    QuotationDetailsDto detailsDto = new QuotationDetailsDto();
                    detailsDto.setMaterialCode(materialCode);
                    detailsDto.setMaterialId(materialDto.getId());
                    detailsDto.setMaterialName(materialDto.getMaterialName());

                    try {
                        detailsDto.setAmount(Double.parseDouble(amountField.getText().toString().trim()));
                    } catch (Exception e) {
                        detailsDto.setAmount(0);
                    }
                    try {
                        detailsDto.setQuantity(Integer.parseInt(quantityField.getText().toString().trim()));
                    } catch (Exception e) {
                        detailsDto.setQuantity(0);
                    }
                    try {
                        detailsDto.setUnitRate(Integer.parseInt(unitRateField.getText().toString().trim()));
                    } catch (Exception e) {
                        detailsDto.setUnitRate(0);
                    }

                    contrctMaterials.add(detailsDto);
                    dtModel.addRow(new Object[]{detailsDto.getMaterialName(), detailsDto.getUnitRate(), detailsDto.getQuantity(), detailsDto.getAmount()});
                } else {
                    DialogHelper.showErrorMessage("Validation", Helper.getPropertyValue("Invalid_Material_Code"));
                }
            } else {
                DialogHelper.showInfoMessage("Materials", Helper.getPropertyValue("EmptyFields"));
            }
        }
    }

    private void clearMaterials() {
        txtMaterialCode.setText("");
        txtMaterialRate.setText("");
        txtMaterialQty.setText("");
        txtMaterialAmount.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClosureScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClosureScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClosureScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClosureScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClosureScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMaterial;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnRemoveMaterial;
    private javax.swing.JButton btnSaveMaterial;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jPCustomerList;
    private javax.swing.JPanel jPLaborDeails;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtAddress2;
    private javax.swing.JTextField txtAgrementReference;
    private javax.swing.JFormattedTextField txtMaterialAmount;
    private javax.swing.JTextField txtMaterialCode;
    private javax.swing.JFormattedTextField txtMaterialQty;
    private javax.swing.JFormattedTextField txtMaterialRate;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNoEmployees;
    private javax.swing.JTextField txtReferenceNo;
    private javax.swing.JTextField txtTotalAmount;
    private javax.swing.JTextField txtTotalDays;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel dtModel;

    ContractDto contractDto;
    CustomerDto customer;
    int selectedMaterial;

    List<QuotationDetailsDto> contrctMaterials;

    Map< String, MaterialDto> materials;

    QuotationService quotationService;

    int quotationId;

    private void setMaterials(ContractDto dto) {
        quotationService = new QuotationServiceImpl();
        quotationId = quotationService.getQuotationId(dto.getId());
        int quotationType = quotationService.getQuotationType(quotationId);

        materials = quotationService.getMaterials(quotationType);

        contrctMaterials = quotationService.getQuotationDetails(quotationId);

        if (contrctMaterials != null && contrctMaterials.size() > 0) {
            ReportContentDto contentDto = getMaterialDetails(contrctMaterials);
            configureTable(contentDto);
        }
    }

    private void configureTable(ReportContentDto contentDto) {
        dtModel = new DefaultTableModel(contentDto.getRowData(), contentDto.getColumnNames()) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };
        JTable tblMaterials = new JTable(dtModel);
        tblMaterials.setRowSelectionAllowed(true);
        tblMaterials.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedMaterial = tblMaterials.rowAtPoint(evt.getPoint());
                // = contrctMaterials.get(row).getMaterialId();
                showSelectedMaterial(contrctMaterials.get(selectedMaterial));
            }
        });
        jPCustomerList.add(tblMaterials);
        jPCustomerList.setViewportView(tblMaterials);
        jPCustomerList.setVisible(true);
    }

    private void showSelectedMaterial(QuotationDetailsDto dto) {
        txtMaterialCode.setText(dto.getMaterialName());
        txtMaterialRate.setText(Double.toString(dto.getUnitRate()));
        txtMaterialQty.setText(Integer.toString(dto.getQuantity()));
        txtMaterialAmount.setText(Double.toString(dto.getAmount()));
    }

    private void populateSelectedDetails(ContractDto dto) {
        QuotationService quotationService = new QuotationServiceImpl();
        int customerID = quotationService.getCustomerId(dto.getId());

        if (customerID > 0) {
            CustomerService customerService = new CustomerServiceImpl();
            customer = customerService.getCustomer(customerID);

            if (customer != null) {
                setCustomerDetails(customer);
            }
        }

        setContractDetails(dto);

        int laborCount = new LaborServiceImpl().getLaborCount(dto.getId());
        String laborCountStr = laborCount > 0 ? Integer.toString(laborCount) : "--";
        txtNoEmployees.setText(laborCountStr);
    }

    private void setContractDetails(ContractDto dto) {
        txtReferenceNo.setText(dto.getContractRefNo());
        txtAgrementReference.setText(dto.getAgrementReference());
        txtTotalAmount.setText(Double.toString(dto.getTotalAmount()));
        txtTotalDays.setText(Helper.getDays(dto.getStartDate(), dto.getEndDate()));
    }

    private void setCustomerDetails(CustomerDto dto) {
        txtName.setText(dto.getName());
        txtAddress1.setText(dto.getAddress1());
        txtAddress2.setText(dto.getAddress2());
    }

    private ReportContentDto getMaterialDetails(List<QuotationDetailsDto> materials) {
        ReportContentDto contentDto = new ReportContentDto();

        Vector<Vector> rowData = new Vector<Vector>();
        for (QuotationDetailsDto material : materials) {
            Vector<String> row = new Vector<>();
            row.add(material.getMaterialName());
            row.add(Double.toString(material.getUnitRate()));
            row.add(Integer.toString(material.getQuantity()));
            row.add(Double.toString(material.getAmount()));

            rowData.add(row);
        }

        Vector<String> columnNames = new Vector<String>();
        columnNames.addElement("Material");
        columnNames.addElement("Unit rate");
        columnNames.addElement("Quantity");
        columnNames.addElement("Amount");

        contentDto.setRowData(rowData);
        contentDto.setColumnNames(columnNames);
        return contentDto;
    }
}
