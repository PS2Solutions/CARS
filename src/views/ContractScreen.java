/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dataclasses.ContractDto;
import dataclasses.ContractPaymentDto;
import dataclasses.ReportContentDto;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import navigationCofiguration.NavigationConstants;
import navigationCofiguration.NavigationController;
import org.jdatepicker.impl.JDatePickerImpl;
import services.impl.ContractServiceImpl;
import services.impl.QuotationServiceImpl;
import services.interfaces.ContractService;
import services.interfaces.QuotationService;
import utils.Arguments;
import utils.Constants;
import utils.DialogHelper;
import utils.Helper;

/**
 *
 * @author shinu.k
 */
public class ContractScreen extends javax.swing.JFrame {

    /**
     * Creates new form LaborScreen
     */
    public ContractScreen() {
        initComponents();
        configureTable();
        setContractReport();
        btnPaymentSave.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        btnAddNew = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        btnAddDailyWage = new javax.swing.JButton();
        jPLaborDeails = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTotalCost = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRemark = new javax.swing.JTextArea();
        btnPaymentSave = new javax.swing.JButton();
        jPCustomerList = new javax.swing.JScrollPane();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("appResources/Strings"); // NOI18N
        setTitle(bundle.getString("Contract_Screen")); // NOI18N
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setPreferredSize(new java.awt.Dimension(1280, 800));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/add.png"))); // NOI18N
        btnAddNew.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnAddNew.setFocusPainted(false);
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/home.png"))); // NOI18N
        btnHome.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnHome.setFocusPainted(false);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/closure.png"))); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnAddDailyWage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAddDailyWage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appResources/daily_wage.png"))); // NOI18N
        btnAddDailyWage.setText("Add daily wage");
        btnAddDailyWage.setToolTipText("");
        btnAddDailyWage.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnAddDailyWage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDailyWageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(382, Short.MAX_VALUE)
                .addComponent(btnAddDailyWage, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddDailyWage)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPLaborDeails.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Payments", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Collected amount");

        txtTotalCost.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Remark");

        txtRemark.setColumns(20);
        txtRemark.setRows(5);
        jScrollPane1.setViewportView(txtRemark);

        btnPaymentSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPaymentSave.setText("Save");
        btnPaymentSave.setToolTipText("");
        btnPaymentSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPLaborDeailsLayout = new javax.swing.GroupLayout(jPLaborDeails);
        jPLaborDeails.setLayout(jPLaborDeailsLayout);
        jPLaborDeailsLayout.setHorizontalGroup(
            jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTotalCost)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addComponent(btnPaymentSave)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPLaborDeailsLayout.setVerticalGroup(
            jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPaymentSave)
                    .addGroup(jPLaborDeailsLayout.createSequentialGroup()
                        .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPLaborDeailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPCustomerList.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPCustomerList)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPLaborDeails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPCustomerList, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPLaborDeails, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        clearFields();
        addContract();
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        NavigationController.navigateToScreen(NavigationConstants.DASHBOARD, this);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnAddDailyWageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDailyWageActionPerformed
        NavigationController.navigateToScreen(NavigationConstants.DAILY_WAGE_SCREEN, this);
    }//GEN-LAST:event_btnAddDailyWageActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        Arguments args = new Arguments();

        selectedDto.setEndDate(Helper.getCurrentDate());
        args.put("contract", selectedDto);

        NavigationController.navigateToScreen(NavigationConstants.CLOSURE_SCREEN, this, args);
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnPaymentSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentSaveActionPerformed
        if (selectedRow < 0) {
            DialogHelper.showInfoMessage("Validation", Helper.getPropertyValue("SelectContract"));
        } else {
            if (txtTotalCost.getText().toString().trim().length() > 0) {
                double payment = Double.parseDouble(txtTotalCost.getText().toString().trim());
                String remark = txtRemark.getText().toString().trim();
                ContractPaymentDto contractPaymentDto = new ContractPaymentDto();
                contractPaymentDto.setContractId(selectedDto.getId());
                contractPaymentDto.setAmount(payment);
                contractPaymentDto.setRemark(remark);
                ContractService contractService = new ContractServiceImpl();
                contractService.saveContractPayments(contractPaymentDto);
                txtRemark.setText("");
                txtTotalCost.setText("");
            } else {
                DialogHelper.showInfoMessage("Validation", Helper.getPropertyValue("EmptyFields"));
            }
        }
    }//GEN-LAST:event_btnPaymentSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContractScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContractScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContractScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContractScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContractScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDailyWage;
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPaymentSave;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jPCustomerList;
    private javax.swing.JPanel jPLaborDeails;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtRemark;
    private javax.swing.JTextField txtTotalCost;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel dtModel;
    List<ContractDto> contractDtos;
    ContractDto selectedDto;
    int selectedRow = -1;

    JTextField quotRefField;

    private void configureTable() {
        dtModel = new DefaultTableModel();
        dtModel.addColumn("Reference No");
        dtModel.addColumn("Start Date");
        dtModel.addColumn("Collected Amount");
        dtModel.addColumn("Last Collection Date");
        dtModel.addColumn("Agrement Reference");

        JTable tblContract = new JTable(dtModel);
        tblContract.setRowSelectionAllowed(true);
        tblContract.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedRow = tblContract.rowAtPoint(evt.getPoint());
                selectedDto = contractDtos.get(selectedRow);
                btnPaymentSave.setEnabled(true);
            }
        });

        jPCustomerList.add(tblContract);
        jPCustomerList.setViewportView(tblContract);
        jPCustomerList.setVisible(true);
    }

    private void setContractReport() {
        ContractService contractService = new ContractServiceImpl();
        contractDtos = contractService.getContracts();

        if (contractDtos != null) {
            populateContractTable();
        }
    }

    private void populateContractTable() {
        for (ContractDto contractDto : contractDtos) {
            dtModel.addRow(new Object[]{contractDto.getContractRefNo(), contractDto.getStartDate(), contractDto.getTotalAmount(), contractDto.getLastCollectionDate(), contractDto.getAgrementReference()});
        }
    }

    private void updateContractTable() {
        dtModel.removeRow(selectedRow);
        dtModel.insertRow(selectedRow, new Object[]{selectedDto.getContractRefNo(), selectedDto.getStartDate(), selectedDto.getTotalAmount(), selectedDto.getLastCollectionDate(), selectedDto.getAgrementReference()});
    }

    private void updateEnteredData() {
        selectedDto.setLastCollectionDate(Helper.getCurrentMysqlFormattedDate());
        double curAmount = txtTotalCost.getText().trim().isEmpty() ? 0 : Double.parseDouble(txtTotalCost.getText().trim());
        selectedDto.setTotalAmount(selectedDto.getTotalAmount() + curAmount);
    }

    private void clearFields() {
        txtTotalCost.setText("");
    }

    private boolean validateFields() {
        return !(txtTotalCost.getText().trim().isEmpty());
    }

    private void addContract() {
        int x = 0, y = 0;

        JPanel jPanel = new JPanel(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        c.anchor = GridBagConstraints.LINE_START;
        c.insets = new Insets(5, 5, 5, 5);
        c.fill = GridBagConstraints.HORIZONTAL;

        c.gridx = x;
        c.gridy = y;
        jPanel.add(new JLabel("Reference No"), c);

        ++x;

        c.gridx = x;
        JTextField refField = new JTextField();
        refField.setEnabled(false);
        refField.setPreferredSize(new Dimension(200, 28));
        refField.setText(Helper.getReferenceNo(Constants.CONTRACT));
        jPanel.add(refField, c);

        x = 0;
        ++y;

        c.gridx = x;
        c.gridy = y;
        jPanel.add(new JLabel("Agrement Reference"), c);

        ++x;

        c.gridx = x;
        JTextField agrRefField = new JTextField();
        agrRefField.setEnabled(false);
        agrRefField.setPreferredSize(new Dimension(200, 28));
        agrRefField.setText(Helper.getReferenceNo(Constants.AGREMENT));
        jPanel.add(agrRefField, c);

        x = 0;
        ++y;

        c.gridx = x;
        c.gridy = y;
        jPanel.add(new JLabel("Quotation Reference"), c);

        ++x;

        c.gridx = x;
        quotRefField = new JTextField();
        quotRefField.setEnabled(false);
        quotRefField.setPreferredSize(new Dimension(200, 28));
        jPanel.add(quotRefField, c);

        ++x;

        c.gridx = x;
        JButton quotButton = new JButton("...");
        quotButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showQuotationRef();
            }
        });

        jPanel.add(quotButton, c);

        x = 0;
        ++y;

        c.gridx = x;
        c.gridy = y;
        jPanel.add(new JLabel("Start date"), c);

        ++x;

        JDatePickerImpl datePicker = Helper.getDatePicker();
        JScrollPane jPJoinDate = jPJoinDate = new JScrollPane();
        jPJoinDate.setVisible(true);
        jPJoinDate.setViewportView(datePicker);

        c.gridx = x;
        jPanel.add(jPJoinDate, c);

        int result = DialogHelper.showQuestionDialog(this, "Choose the Quotation", jPanel, JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            String quotationRef = quotRefField.getText().trim();
            if (quotationRef.isEmpty()) {
                DialogHelper.showInfoMessage("Validation", Helper.getPropertyValue("EmptyQuotationFields"));
            } else if (datePicker.getJFormattedTextField().getText().isEmpty()) {
                DialogHelper.showInfoMessage("Validation", Helper.getPropertyValue("EmptyFields"));
            } else {
                setContract(refField.getText(), agrRefField.getText(), datePicker.getJFormattedTextField().getText());
                saveContract(quotationRef);
            }
        }
    }

    private void showQuotationRef() {
        ReportContentDto contentDto = new QuotationServiceImpl().getQuotationRefs();

        JPanel searchPanel = new JPanel(new GridBagLayout());

        GridBagConstraints c = new GridBagConstraints();
        c.insets = new Insets(5, 5, 5, 5);
        c.gridx = 1;
        c.gridy = 0;
        searchPanel.add(new JLabel("Search title"), c);
        c.gridx = 2;
        JTextField jtfFilter = new JTextField();
        jtfFilter.setPreferredSize(new Dimension(200, 28));
        searchPanel.add(jtfFilter, c);

        DefaultTableModel tableModel = new DefaultTableModel(contentDto.getRowData(), contentDto.getColumnNames());
        JTable table = new JTable(tableModel);
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(table.getModel());
        table.setRowSelectionAllowed(true);
        table.setRowSorter(rowSorter);

        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(10, 10));
        mainPanel.add(searchPanel, BorderLayout.SOUTH);
        mainPanel.add(new JScrollPane(table), BorderLayout.CENTER);

        jtfFilter.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jtfFilter.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jtfFilter.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });

        int result = DialogHelper.showQuestionDialog(this, "Select Quotation", mainPanel, JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            int row = table.convertRowIndexToModel(table.getSelectedRow());
            String quotRef = contentDto.getRowData().get(row).get(1).toString();
            quotRefField.setText(quotRef);
        }
    }

    private void saveContract(String quotationRef) {
        ContractService contractService = new ContractServiceImpl();

        int contractId = contractService.saveContract(selectedDto);
        if (contractId > 0) {
            selectedDto.setId(contractId);
            updateQuotationRef(quotationRef, contractId);

            Helper.updateReferenceNo(Constants.CONTRACT);
            Helper.updateReferenceNo(Constants.AGREMENT);

            DialogHelper.showInfoMessage(Helper.getPropertyValue("Success"),
                    Helper.getPropertyValue("SuccessMessage"));

            clearFields();
            configureTable();
            setContractReport();
        } else {
            DialogHelper.showErrorMessage("Error", "Error");
        }
    }

    private void setContract(String refNo, String agrRefNo, String startDate) {
        selectedDto = new ContractDto();
        selectedDto.setContractRefNo(refNo);
        selectedDto.setAgrementReference(agrRefNo);
        selectedDto.setStartDate(Helper.getMysqlFormattedDate(startDate));
        selectedDto.setLastCollectionDate(Helper.getCurrentMysqlFormattedDate());
        selectedDto.setTotalAmount(0);
    }

    private void addConractToTable() {
        dtModel.addRow(new Object[]{selectedDto.getContractRefNo(), selectedDto.getStartDate(), selectedDto.getTotalAmount(), selectedDto.getLastCollectionDate(), selectedDto.getAgrementReference()});
    }

    private int updateQuotationRef(String quotationRef, int contractId) {
        QuotationService quotationService = new QuotationServiceImpl();
        return quotationService.updateQuotation(quotationRef, contractId);
    }
}
